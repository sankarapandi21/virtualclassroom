// Factory Method pattern

// Animal interface
interface Animal {
    void makeSound();
}

// Dog class implementing Animal interface
class Dog implements Animal {
    @Override
    public void makeSound() {
        System.out.println("Woof!");
    }
}

// Cat class implementing Animal interface
class Cat implements Animal {
    @Override
    public void makeSound() {
        System.out.println("Meow!");
    }
}

// AnimalFactory class with the factory method
class AnimalFactory {
    public static Animal createAnimal(String type) {
        if (type.equalsIgnoreCase("dog")) {
            return new Dog();
        } else if (type.equalsIgnoreCase("cat")) {
            return new Cat();
        } else {
            throw new IllegalArgumentException("Unknown animal type.");
        }
    }
}

// Test the Factory Method pattern
public class Main {
    public static void main(String[] args) {
        Animal dog = AnimalFactory.createAnimal("dog");
        dog.makeSound(); // Output: Woof!

        Animal cat = AnimalFactory.createAnimal("cat");
        cat.makeSound(); // Output: Meow!
    }
}
